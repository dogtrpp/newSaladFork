##This config is based on the stock Voron Trident config modified for the Salad Fork.
##My printer is using a BTT Manta M8P with CB1, EBB36 toolhead CAN board, Dragon Burner toolhead with LGX Lite and Rapido (PT1000) hotend, sensorless x homing and Boop.

[include mainsail.cfg]

#[include klicky.cfg]

[exclude_object]

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes

[pause_resume]

[display_status]

[idle_timeout]

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 6200
max_z_velocity: 200
max_z_accel: 2000
square_corner_velocity: 5.0

[idle_timeout]
timeout: 1800

##Manta M8P
[mcu]
restart_method: command
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_430036000C504B4633373520-if00

##EBB36 Toolhead Board
[mcu can0]
canbus_uuid: 8b807351c67e

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Sensorless Homing
[stepper_x]
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
rotation_distance: 32
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#This config is using sensorless homing for x, not an endstop. On the Manta M8P you need to put a jumper on the appropriate pins.
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 166
position_max: 166
homing_speed: 50   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
diag_pin: PF3
#Using sensorless homing on x, you will need to test the driver_SGTHRS setting for your printer.
driver_SGTHRS: 75
uart_pin: PC10
interpolate: False
run_current: 1.1
sense_resistor: 0.110
#stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
rotation_distance: 32
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PF4
position_min: 0
position_endstop: 160
position_max: 160
homing_speed: 75  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PF13
interpolate: False
run_current: 1.1
sense_resistor: 0.110
#stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PF10
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8    
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 13
## All builds use same Max Z
position_max: 150
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF9
interpolate: False
run_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PD3
dir_pin: !PD2
enable_pin: !PD5
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: False
run_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: False
run_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

#   Connected to EBB36
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: can0:PD0
dir_pin: can0:PD1
enable_pin: !can0:PD2
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 5.58   #LGX Lite
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: can0:PB13
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: can0:PA3
min_temp: 10
max_temp: 270
max_power: 0.8
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.025
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: .760

##  E0 on EBB36
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: can0:PA15
interpolate: false
run_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PB7
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA0
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

#This config is using Boop for the probe, not klicky.

[probe]

pin: can0:PB8
x_offset: 0
y_offset: 0
#z_offset: 5.350
speed: 5
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.00750
samples_tolerance_retries: 5


activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#####################################################################
#   Resonance Testing
#####################################################################

## ADXL345
[adxl345]
cs_pin: can0:PB12
spi_software_sclk_pin: can0:PB10
spi_software_mosi_pin: can0:PB11
spi_software_miso_pin: can0:PB2
axes_map: x,y,z

[input_shaper]

[resonance_tester]
accel_chip: adxl345
probe_points:
    80,80,20

#####################################################################
#   Temperature Sensors
#####################################################################

## can0 Temp
[temperature_sensor CANBOARD]
sensor_type: temperature_mcu
sensor_mcu: can0

## CB1 Temp
[temperature_sensor CB1]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

## MCU Temp
[temperature_sensor MCU_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

##Toolhead Temp
[temperature_sensor Toolhead_temp]
sensor_type: Generic 3950
sensor_pin: PA1
min_temp: 0
max_temp: 100

##Bed Level Temp
[temperature_sensor Bed_level_temp]
sensor_pin: PA2
sensor_type: Generic 3950
min_temp: 0
max_temp: 100

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: can0:PA0
kick_start_time: 0.5
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: can0:PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 40.0
##  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PE6
kick_start_time: 0.5
heater: heater_bed

[heater_fan carbon_filter]
##  Exhaust fan - FAN3
pin: PE5
max_power: 0.5
kick_start_time: 0.1
heater: heater_bed
heater_temp: 40
fan_speed: 0.5
shutdown_speed: 0.0

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight1]
# Chamber Lighting - HE2 Connector (Optional)
pin: PE0
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

[output_pin caselight2]
# Chamber Lighting - HE2 Connector (Optional)
pin: PC12
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 80,80
speed:100
z_hop:10

#####################################################################
#   Auto Z Calibration
#####################################################################

#[z_calibration]
#nozzle_xy_position:   100,162
#switch_xy_position:   95,128
#bed_xy_position:      80,80
#switch_offset:        3.2
#start_gcode:          ATTACH_PROBE
#before_switch_gcode: <macro name for attaching the probe AFTER probing the nozzle>
#end_gcode:            DOCK_PROBE

####################################################################
## Z TILT CONFIGURATION
####################################################################

[z_tilt]
z_positions:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
    -50, -13
    75, 197
    200, -13

points:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
    10, 10
    80, 150
    150, 10

speed: 150
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

####################################################################
## BED MESH CONFIGURATION
####################################################################

[bed_mesh]
#   The speed (in mm/s) of non-probing moves during the calibration.
speed: 150

#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
horizontal_move_z: 5

#   Defines the minimum x,y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_min:
    20, 20

#   Defines the maximum x,y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
mesh_max:
    140, 140
probe_count:
    5,5
relative_reference_index:
    11
    
#probe_count:
#    5,5
#relative_reference_index:
#     11


########################################
# EXP1 / EXP2 (display) pins
########################################

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD6,  EXP1_3=PB9,  EXP1_5=PA15, EXP1_7=PA9,   EXP1_9=<GND>,
    EXP1_2=PB8,  EXP1_4=PC3,  EXP1_6=PA10, EXP1_8=PB5,   EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PC11, EXP2_5=PC12, EXP2_7=PC13,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PA8,  EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>


#####################################################################
#   Displays
#####################################################################

#[display]
#lcd_type: sh1106
#i2c_mcu: display
#i2c_bus: i2c1a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
#encoder_pins: ^display:PA3, ^display:PA4
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
#click_pin: ^!display:PA1
#kill_pin: ^!display:PA5
#x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
#vcomh: 0
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

#[neopixel displayStatus]
#pin: display:PA0
#chain_count: 1
#color_order: GRB
#initial_RED: 0.2
#initial_GREEN: 0.05
#initial_BLUE: 0

#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START]

gcode:
    {% set BED = params.BED|default(70)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(213)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    {% set CHAMBER = params.CHAMBER|default(0)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|float %}
    {% set STANDBY = params.STANDBY|default(0)|float %}
    {% set STANDBY_TEMP = params.STANDBY_TEMP|default(150)|float %}

    {% if (EXTRUDER_TEMP > 0) %}
	    {% set EXTRUDER = EXTRUDER_TEMP %}
    {% endif %}

    {% if (BED_TEMP > 0) %}
	    {% set BED = BED_TEMP %}
    {% endif %}

    {% if (CHAMBER_TEMP > 0) %}
    	{% set CHAMBER = CHAMBER_TEMP %}

    {% endif %}

    {% if (STANDBY_TEMP > 0) %}
    	{% set STANDBY = STANDBY_TEMP %}
    {% endif %}

    #Reset the extruder
    G92 E0

    M117 Heating
    #Start heating the bed
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}
    #Heat hotend to standby temp - 150C for Boop
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={STANDBY}
    #Wait for bed to heat before continuing
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}

    # Use absolute coordinates
    G90

    M117 Homing
    # Home the printer
    G28

    M117 Calibrating
    #Calibrate Z motors
    Z_TILT_ADJUST
    #Home Z after adjust Z motors
    G28 Z

    #Check bed mesh
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default

    #Wait for chamber temp to reach set point - default is 45C for ABS
    TEMPERATURE_WAIT SENSOR="temperature_sensor Toolhead_temp" MINIMUM={CHAMBER}

    #Heatup the hotend once chamber is up to temp
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER}

    #Purge some filament on the edge of the bed
    PRIME_LINE

    M117 Printing...

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 

    M117 Prime Line

    SAVE_GCODE_STATE NAME=PRIME

    G1 Z2.0 F3000 ;Move Z Axis up

    # move to prime position 
    G1 X2 Y30 Z0.28 F5000.0 ;Move to start position
    G1 X2 Y140.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X2.2 Y140.0 Z0.28 F5000.0 ;Move to side a little
    G1 X2.2 Y30 Z0.28 F1500.0 E30 ;Draw the second line
    G1 Z2.0 F3000 ;Move Z Axis up 

    RESTORE_GCODE_STATE NAME=PRIME

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    #Fix-up extruder
    G91
    G1 X-2 Y-2 E-3 F300
    G1 Z10 F3000
    G1 E-10 F1000                               
    G90                                        
        G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0  					; park nozzle at rear
   
    #Disable heaters
    M106 S0                                      
    M104 S0                                       
    M140 S0

    #Disable teppers
    M84 X Y E

    M117 Complete!

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 25
variable_start_y: 172
#variable_start_z: 2
variable_wipe_dist: -50
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 30

gcode:
  #Home if Needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}

  ## Purge Filament
  SAVE_GCODE_STATE NAME=PURGE  
  G90
  G0 X30 Y172 F6000

  M83
  G1 E50 F500        ; purge some filament into bucket
  RESTORE_GCODE_STATE NAME=PURGE


  G90                                            ; absolute positioning
  ## Move nozzle to start position
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z} F1500

  
  
  ## Wipe nozzle
  {% for wipes in range(1, (wipe_qty + 1)) %}
  G1 X{start_x + wipe_dist} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  {% endfor %}

  ## Raise nozzle
  G1 Z{raise_distance}

[delayed_gcode _SET_CASELIGHT_OFF]
gcode:
  SET_CASELIGHT_OFF


[gcode_macro SET_CASELIGHT_ON]
description: Turn on the caselight LEDs
gcode:
  SET_PIN PIN=caselight1 VALUE=1
  SET_PIN PIN=caselight2 VALUE=1

[gcode_macro SET_CASELIGHT_OFF]
description: Turn off the caselight LEDs
gcode:
  SET_PIN PIN=caselight1 VALUE=0
  SET_PIN PIN=caselight2 VALUE=0


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro PARK]
gcode:
    G1 X125 Y200.0 Z200.0 F4000
[gcode_macro FILAMENT_LOAD]
gcode:
    M83 ; set e to relative positioning
    G92 E0.0
    G1 E80 F500 ; Initially go fast
    G92 E0.0
    G1 E20 F100 ; then go slow
    G92 E0.0
 
[gcode_macro FILAMENT_UNLOAD]
gcode:
    M83 ; set e to relative positioning
    # wiggle filament out of the nozzle
    G1 E0.5 F1000
    G1 E-0.5 F1000
    G1 E1.0 F1000
    G1 E-1.0 F1000
    G1 E1.5 F1000
    G1 E-1.5 F1000
    G1 E2.0 F1000
 
    G1 E-100 F500 ;fully unload
    G92 E0.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.161
#*# pid_ki = 1.358
#*# pid_kd = 311.792
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.139
#*# pid_ki = 4.603
#*# pid_kd = 59.651
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.008750, 0.046250, 0.013750, 0.048750, 0.073750
#*# 	  0.032500, 0.042500, 0.045000, 0.052500, 0.083750
#*# 	  -0.017500, 0.000000, 0.038750, 0.036250, 0.065000
#*# 	  -0.020000, -0.025000, 0.036250, 0.041250, 0.075000
#*# 	  -0.036250, 0.032500, 0.045000, 0.053750, 0.080000
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 5
#*# max_y = 140.0
#*# mesh_x_pps = 2
#*# max_x = 140.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 81.6
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 74.4
#*#
#*# [probe]
#*# z_offset = -0.800
